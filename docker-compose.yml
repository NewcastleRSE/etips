services:
  postgres:
    container_name: postgres
    # cause postgis doesn't have ARM image just yet...
    # image: postgis/postgis:16-3.4
    image: postgres:16-alpine
    restart: always
    volumes:
      - ./data/db/postgres/scripts:/docker-entrypoint-initdb.d
      - ./data/db/postgres/data:/var/lib/postgresql/data
      - ./data/db/postgres/restore:/home/dump:ro
      - ./data/db/postgres/backup:/home/data/backup
    env_file:
      - .env
    networks:
      - subnet
    ports:
      - 5432:5432
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER}']
      interval: 5s
      timeout: 5s
      retries: 5

  caddy:
    container_name: caddy
    image: caddy:latest
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
      - 443:443/udp
    volumes:
      - ./data/caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./data/caddy/site:/srv
      - ./data/caddy/caddy_data:/data
      - ./data/caddy/caddy_config:/config
    networks:
      - subnet
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env

  directus:
    container_name: directus
    image: ghcr.io/artgpz/directus-template/server:latest
    restart: unless-stopped
    volumes:
      - ./data/directus/database:/directus/database:rw
      - ./data/directus/uploads:/directus/uploads:rw
    env_file:
      - .env
    networks:
      - subnet
    depends_on:
      postgres:
        condition: service_healthy

  etips:
    # image: etips
    build:
      context: .
      dockerfile: Dockerfile
    user: node
    # image: ghrc.io/newcastlerse/etips:latest
    container_name: etips
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - subnet
    depends_on:
      postgres:
        condition: service_healthy

  umami:
    container_name: umami
    image: ghcr.io/umami-software/umami:postgresql-latest
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    healthcheck:
      test: ['CMD-SHELL', 'curl http://localhost:3000/api/heartbeat']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - subnet

networks:
  subnet:
    name: subnet
    driver: bridge
